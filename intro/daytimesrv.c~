#include "utils.h"
#include <time.h>

int
main(int argc, char **argv)
{
  int listenfd, connfd;
  struct sockaddr_in servaddr;
  struct sockaddr_in cliaddr;
  socklen_t cliaddrlen = sizeof(cliaddr);
  char buff[MAXLINE];
  char client_address_buff[INET_ADDRSTRLEN];
  time_t ticks;

  listenfd = Socket(AF_INET, SOCK_STREAM, 0);
  bzero(client_address_buff, INET_ADDRSTRLEN);
  bzero(&servaddr, sizeof(servaddr));
  servaddr.sin_family = AF_INET;
  servaddr.sin_addr.s_addr = htonl(INADDR_ANY);
  servaddr.sin_port = htons(13);

  Bind(listenfd, (SA *)&servaddr, sizeof(servaddr));

  Listen(listenfd, LISTENQ);

  /* Infinite loop waiting for connections to accept. */
  for(; ;) {
    connfd = Accept(listenfd, (SA *)&cliaddr, &cliaddrlen);
    if(cliaddrlen <= sizeof(cliaddr)) {
      inet_ntop(AF_INET, &cliaddr.sin_addr.s_addr, client_address_buff, cliaddrlen);
      printf("Accepted connection from: %s\n", client_address_buff);
    } else {
      printf("Couldn't determine client address.\n");
    }
    
    ticks = time(NULL);
    snprintf(buff, sizeof(buff), "%.24s\r\n", ctime(&ticks));
    Write(connfd, buff, strlen(buff));
    
    Close(connfd);
  }
}
